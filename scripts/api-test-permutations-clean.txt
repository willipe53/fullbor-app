# FullBor V2 API Test Permutations
# Generated from OpenAPI specification
# Base URL: https://api.fullbor.ai/v2/
# All endpoints require authentication with X-Current-User-Id header

# =============================================================================
# CLIENT GROUPS ENDPOINTS
# =============================================================================

# List Client Groups (with entity filter only - user_name removed for security)
https://api.fullbor.ai/v2/client-groups
https://api.fullbor.ai/v2/client-groups?entity_name=Test%20Entity%20from%20API

# Get Client Group by Name
https://api.fullbor.ai/v2/client-groups/Byrde%20Family%20Foundation
https://api.fullbor.ai/v2/client-groups/Test%20Client%20Group
https://api.fullbor.ai/v2/client-groups/NonExistent%20Group

# Create Client Group (POST)
https://api.fullbor.ai/v2/client-groups

# Update Client Group (PUT)
https://api.fullbor.ai/v2/client-groups/Byrde%20Family%20Foundation

# Delete Client Group (DELETE)
https://api.fullbor.ai/v2/client-groups/Test%20Client%20Group

# Set Entities for Client Group (POST)
https://api.fullbor.ai/v2/client-groups/Byrde%20Family%20Foundation/entities:set

# Set Users for Client Group (POST)
https://api.fullbor.ai/v2/client-groups/Byrde%20Family%20Foundation/users:set

# Get Client Group Invitations
https://api.fullbor.ai/v2/client-groups/Byrde%20Family%20Foundation/invitations

# =============================================================================
# ENTITIES ENDPOINTS
# =============================================================================

# List Entities (with various filters)
https://api.fullbor.ai/v2/entities
https://api.fullbor.ai/v2/entities?user_name=willipe53+test@gmail.com
https://api.fullbor.ai/v2/entities?entity_type_name=Portfolio
https://api.fullbor.ai/v2/entities?client_group_name=Byrde%20Family%20Foundation
https://api.fullbor.ai/v2/entities?user_name=willipe53+test@gmail.com&entity_type_name=Portfolio
https://api.fullbor.ai/v2/entities?user_name=willipe53+test@gmail.com&client_group_name=Byrde%20Family%20Foundation
https://api.fullbor.ai/v2/entities?entity_type_name=Portfolio&client_group_name=Byrde%20Family%20Foundation
https://api.fullbor.ai/v2/entities?user_name=willipe53+test@gmail.com&entity_type_name=Portfolio&client_group_name=Byrde%20Family%20Foundation

# Get Entity by Name
https://api.fullbor.ai/v2/entities/Test%20Entity%20from%20API
https://api.fullbor.ai/v2/entities/Harry%20Hedge%20Fund
https://api.fullbor.ai/v2/entities/NonExistent%20Entity

# Create Entity (POST)
https://api.fullbor.ai/v2/entities

# Update Entity (PUT)
https://api.fullbor.ai/v2/entities/Test%20Entity%20from%20API

# Delete Entity (DELETE)
https://api.fullbor.ai/v2/entities/Test%20Entity%20from%20API

# =============================================================================
# ENTITY TYPES ENDPOINTS
# =============================================================================

# List Entity Types (with category filter)
https://api.fullbor.ai/v2/entity-types
https://api.fullbor.ai/v2/entity-types?entity_category=Investment
https://api.fullbor.ai/v2/entity-types?entity_category=Trading
https://api.fullbor.ai/v2/entity-types?entity_category=Security
https://api.fullbor.ai/v2/entity-types?entity_category=Currency
https://api.fullbor.ai/v2/entity-types?entity_category=Instrument

# Get Entity Type by Name
https://api.fullbor.ai/v2/entity-types/Portfolio
https://api.fullbor.ai/v2/entity-types/Instrument
https://api.fullbor.ai/v2/entity-types/NonExistent%20Type

# Create Entity Type (POST)
https://api.fullbor.ai/v2/entity-types

# Update Entity Type (PUT)
https://api.fullbor.ai/v2/entity-types/Portfolio

# Delete Entity Type (DELETE)
https://api.fullbor.ai/v2/entity-types/Portfolio

# =============================================================================
# TRANSACTIONS ENDPOINTS
# =============================================================================

# List Transactions (with various filters)
https://api.fullbor.ai/v2/transactions
https://api.fullbor.ai/v2/transactions?count=true
https://api.fullbor.ai/v2/transactions?limit=10
https://api.fullbor.ai/v2/transactions?limit=50
https://api.fullbor.ai/v2/transactions?offset=0
https://api.fullbor.ai/v2/transactions?offset=10
https://api.fullbor.ai/v2/transactions?portfolio_entity_name=Test%20Entity%20from%20API
https://api.fullbor.ai/v2/transactions?contra_entity_name=Harry%20Hedge%20Fund
https://api.fullbor.ai/v2/transactions?instrument_entity_name=Test%20Instrument
https://api.fullbor.ai/v2/transactions?transaction_status_name=QUEUED
https://api.fullbor.ai/v2/transactions?transaction_type_name=Buy
https://api.fullbor.ai/v2/transactions?limit=10&offset=0
https://api.fullbor.ai/v2/transactions?portfolio_entity_name=Test%20Entity%20from%20API&contra_entity_name=Harry%20Hedge%20Fund
https://api.fullbor.ai/v2/transactions?transaction_status_name=QUEUED&transaction_type_name=Buy
https://api.fullbor.ai/v2/transactions?limit=20&offset=0&count=false
https://api.fullbor.ai/v2/transactions?portfolio_entity_name=Test%20Entity%20from%20API&instrument_entity_name=Test%20Instrument&transaction_status_name=QUEUED

# Get Transaction by ID
https://api.fullbor.ai/v2/transactions/1
https://api.fullbor.ai/v2/transactions/30
https://api.fullbor.ai/v2/transactions/999

# Create Transaction (POST)
https://api.fullbor.ai/v2/transactions

# Update Transaction (PUT)
https://api.fullbor.ai/v2/transactions/30

# Delete Transaction (DELETE)
https://api.fullbor.ai/v2/transactions/30

# =============================================================================
# TRANSACTION TYPES ENDPOINTS
# =============================================================================

# List Transaction Types
https://api.fullbor.ai/v2/transaction-types

# Get Transaction Type by Name
https://api.fullbor.ai/v2/transaction-types/Buy
https://api.fullbor.ai/v2/transaction-types/Sell
https://api.fullbor.ai/v2/transaction-types/NonExistent%20Type

# Create Transaction Type (POST)
https://api.fullbor.ai/v2/transaction-types

# Update Transaction Type (PUT)
https://api.fullbor.ai/v2/transaction-types/Buy

# Delete Transaction Type (DELETE)
https://api.fullbor.ai/v2/transaction-types/Buy

# =============================================================================
# TRANSACTION STATUSES ENDPOINTS
# =============================================================================

# List Transaction Statuses
https://api.fullbor.ai/v2/transaction-statuses

# =============================================================================
# POSITION KEEPER ENDPOINTS
# =============================================================================

# Position Keeper Control (POST)
https://api.fullbor.ai/v2/position-keeper

# =============================================================================
# USERS ENDPOINTS
# =============================================================================

# List Users
https://api.fullbor.ai/v2/users

# Get User by Name
https://api.fullbor.ai/v2/users/willipe53+test@gmail.com
https://api.fullbor.ai/v2/users/nonexistent@example.com

# Create User (POST)
https://api.fullbor.ai/v2/users

# Update User (PUT)
https://api.fullbor.ai/v2/users/willipe53+test@gmail.com

# Delete User (DELETE)
https://api.fullbor.ai/v2/users/willipe53+test@gmail.com

# Set Client Groups for User (POST)
https://api.fullbor.ai/v2/users/willipe53+test@gmail.com/client-groups:set

# =============================================================================
# INVITATIONS ENDPOINTS
# =============================================================================

# List Invitations (with various filters)
https://api.fullbor.ai/v2/invitations
https://api.fullbor.ai/v2/invitations?filter=unexpired
https://api.fullbor.ai/v2/invitations?client_group_name=Byrde%20Family%20Foundation
https://api.fullbor.ai/v2/invitations?filter=unexpired&client_group_name=Byrde%20Family%20Foundation

# Get Invitation by ID
https://api.fullbor.ai/v2/invitations/1
https://api.fullbor.ai/v2/invitations/999

# Create Invitation (POST)
https://api.fullbor.ai/v2/invitations

# Update Invitation (PUT)
https://api.fullbor.ai/v2/invitations/1

# Delete Invitation (DELETE)
https://api.fullbor.ai/v2/invitations/1

# Redeem Invitation (POST)
https://api.fullbor.ai/v2/invitations/redeem/ABCD1234EFGH5678
https://api.fullbor.ai/v2/invitations/redeem/INVALID12345678

# =============================================================================
# ERROR TESTING ENDPOINTS
# =============================================================================

# Test non-existent endpoints (should return 404)
https://api.fullbor.ai/v2/nonexistent
https://api.fullbor.ai/v2/invalid-endpoint
https://api.fullbor.ai/v2/test/notfound

# Test malformed URLs
https://api.fullbor.ai/v2/transactions/invalid-id
https://api.fullbor.ai/v2/users/
https://api.fullbor.ai/v2/entity-types//

# =============================================================================
# AUTHORIZATION TESTING ENDPOINTS
# =============================================================================

# Test endpoints with invalid user ID (should return 403)
# Note: These should be tested with X-Current-User-Id: invalid-user-id
https://api.fullbor.ai/v2/client-groups
https://api.fullbor.ai/v2/entities
https://api.fullbor.ai/v2/transactions
https://api.fullbor.ai/v2/users

# =============================================================================
# PERFORMANCE TESTING ENDPOINTS
# =============================================================================

# Test endpoints that might return large datasets
https://api.fullbor.ai/v2/transactions?limit=1000
https://api.fullbor.ai/v2/entities?limit=1000
https://api.fullbor.ai/v2/invitations?limit=1000

# Test count endpoints
https://api.fullbor.ai/v2/transactions?count=true
https://api.fullbor.ai/v2/entities?count=true

# =============================================================================
# EDGE CASE TESTING ENDPOINTS
# =============================================================================

# Test with special characters in parameters
https://api.fullbor.ai/v2/entities?entity_type_name=Test%20%26%20Special
https://api.fullbor.ai/v2/transactions?portfolio_entity_name=Entity%20with%20%22quotes%22
https://api.fullbor.ai/v2/users/user%2Btest%40example.com

# Test with empty parameters
https://api.fullbor.ai/v2/entities?entity_type_name=
https://api.fullbor.ai/v2/transactions?portfolio_entity_name=
https://api.fullbor.ai/v2/invitations?client_group_name=

# Test with very large parameters
https://api.fullbor.ai/v2/entities?entity_type_name=VeryLongEntityTypeNameThatExceedsNormalLengthLimitsAndTestsBoundaryConditionsForTheSystem
https://api.fullbor.ai/v2/transactions?limit=999999
https://api.fullbor.ai/v2/transactions?offset=999999

# =============================================================================
# NOTES FOR TEST HARNESS IMPLEMENTATION
# =============================================================================

# 1. ALL endpoints require authentication headers:
#    - Authorization: Bearer <JWT_TOKEN>
#    - X-Current-User-Id: <VALID_USER_ID>

# 2. Test the custom domain (api.fullbor.ai) endpoints

# 3. Test all HTTP methods where applicable:
#    - GET: List and retrieve operations
#    - POST: Create operations
#    - PUT: Update operations  
#    - DELETE: Delete operations

# 4. Test with valid and invalid data:
#    - Valid existing IDs/names
#    - Invalid/non-existent IDs/names
#    - Malformed parameters
#    - Edge cases (empty strings, special characters, etc.)

# 5. Test response codes:
#    - 200: Successful GET/PUT operations
#    - 201: Successful POST operations
#    - 204: Successful DELETE operations
#    - 400: Bad request (invalid parameters)
#    - 401: Unauthorized (missing/invalid authentication)
#    - 403: Forbidden (access denied)
#    - 404: Not found
#    - 500: Internal server error

# 6. Test response formats:
#    - JSON structure matches OpenAPI schema
#    - Proper Content-Type headers
#    - Error messages are descriptive
#    - Pagination works correctly (limit/offset)

# 7. Test filtering combinations:
#    - Single filter parameters
#    - Multiple filter parameters
#    - Invalid filter values
#    - Empty filter values

# 8. Test relationship operations:
#    - Setting entities for client groups
#    - Setting users for client groups
#    - Setting client groups for users
#    - Redeeming invitations

# 9. Test authorization scenarios:
#    - Users accessing their own data
#    - Users accessing data from their client groups
#    - Users trying to access data outside their scope
#    - System operations with system user ID
